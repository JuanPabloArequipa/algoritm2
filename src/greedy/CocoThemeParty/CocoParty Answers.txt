a. Identify the greedy choice:
Take a guest from the starting and other from the end of a non-decreasing sorted guests list.

b. Identify the optimal substructure:
OptimalSolution(Global) = OptimalSolution (LocalSolution1) U OptimalSolution (Global-LocalSolution1)
The LocalSolution(n) contains the Global OptimalSolution for n amount of guests

d. Time complexity of the solution:
N logN (Sort algorithm)